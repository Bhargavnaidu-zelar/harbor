harbor:
  expose:
    type: ingress
    tls:
      # Enable TLS or not.
      # Delete the "ssl-redirect" annotations in "expose.ingress.annotations" when TLS is disabled and "expose.type" is "ingress"
      # Note: if the "expose.type" is "ingress" and TLS is disabled,
      # the port must be included in the command when pulling/pushing images.
      # Refer to https://github.com/goharbor/harbor/issues/5291 for details.
      enabled: false
      # The source of the tls certificate. Set as "auto", "secret"
      # or "none" and fill the information in the corresponding section
      # 1) auto: generate the tls certificate automatically
      # 2) secret: read the tls certificate from the specified secret.
      # The tls certificate can be generated manually or by cert manager
      # 3) none: configure no tls certificate for the ingress. If the default
      # tls certificate is configured in the ingress controller, choose this option
      # certSource: secret
      # # auto:
      # #   # The common name used to generate the certificate, it's necessary
      # #   # when the type isn't "ingress"
      # #   commonName: "bhargav"
      # secret:
      #   # The name of secret which contains keys named:
      #   # "tls.crt" - the certificate
      #   # "tls.key" - the private key
      #   secretName: "my-harbor-tls-secret"
    ingress:
      hosts:
        core: harbor.192.168.1.87.nip.io
      controller: default
      kubeVersionOverride: ""
      className: "nginx"
      annotations:
        ingress.kubernetes.io/ssl-redirect: "true"
        ingress.kubernetes.io/proxy-body-size: "0"
        nginx.ingress.kubernetes.io/ssl-redirect: "true"
        nginx.ingress.kubernetes.io/proxy-body-size: "0"
        # cert-manager.io/cluster-issuer: "letsencrypt-prod"
      paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: my-harbor-core
              port:
                number: 80
        - path: /portal
          pathType: Prefix
          backend:
            service:
              name: my-harbor-portal
              port:
                number: 80
    clusterIP:
      name: harbor
      staticClusterIP: ""
      ports:
        httpPort: 80
        httpsPort: 443
      annotations: {}
      labels: {}
  
  externalURL: http://harbor.192.168.1.87.nip.io
  
  existingSecretAdminPasswordKey: HARBOR_ADMIN_PASSWORD
  harborAdminPassword: "Bhargav123"
